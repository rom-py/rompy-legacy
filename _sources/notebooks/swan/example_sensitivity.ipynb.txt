{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# SWAN sensitivity example\n",
    "\n",
    "In this notebook we will load the base config options from yaml file and define\n",
    "different SWAN workspaces for different source terms to simulate sensitivity testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "import os\n",
    "from copy import deepcopy\n",
    "from pathlib import Path\n",
    "import yaml\n",
    "import shutil\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Workspace basepath"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "workdir = Path(\"example_sensitivity\")\n",
    "shutil.rmtree(workdir, ignore_errors=True)\n",
    "workdir.mkdir()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Instantiate model\n",
    "\n",
    "Use a fully-defined config from yaml to instantiate ModelRun with the runtime parameters\n",
    "and the config definition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Uncoment below to view the contents of the yaml file\n",
    "\n",
    "# !cat example_sensitivity.yml"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SwanConfigComponents(model_type='swanconfig', template='/source/csiro/rompy/rompy/templates/swancomp', checkout='main', cgrid=REGULAR(model_type='regular', spectrum=SPECTRUM(model_type='spectrum', mdc=36, flow=0.04, fhigh=1.0, msc=None, dir1=None, dir2=None), grid=GRIDREGULAR(model_type='gridregular', xp=110.0, yp=-35.2, alp=4.0, xlen=7.5, ylen=12.5, mx=14, my=24, suffix='c')), startup=STARTUP(model_type='startup', project=PROJECT(model_type='project', name='Test sensitivity', nr='run1', title1='Source terms sensitivity testing', title2=None, title3=None), set=SET(model_type='set', level=0.0, nor=None, depmin=0.05, maxmes=None, maxerr=None, grav=None, rho=None, cdcap=None, inrhog=None, hsrerr=None, direction_convention='nautical', pwtail=None, froudmax=None, icewind=None), mode=MODE(model_type='mode', kind='nonstationary', dim='twodimensional'), coordinates=COORDINATES(model_type='coordinates', kind=SPHERICAL(model_type='spherical', projection='ccm'), reapeating=False)), inpgrid=DataInterface(model_type='data_interface', bottom=SwanDataGrid(model_type='data_grid', id='data', source=SourceIntake(model_type='intake', dataset_id='gebco', catalog_uri='../../tests/data/catalog.yaml', catalog_yaml=None, kwargs={}), link=False, filter=Filter(sort={}, subset={}, crop={}, timenorm={}, rename={}, derived={}), variables=['elevation'], coords=DatasetCoords(t='time', x='lon', y='lat', z='depth', s='site'), crop_data=True, buffer=1.0, time_buffer=[0, 0], z1='elevation', z2=None, var=<GridOptions.BOTTOM: 'bottom'>, fac=-1.0), input=[SwanDataGrid(model_type='data_grid', id='data', source=SourceIntake(model_type='intake', dataset_id='era5', catalog_uri='../../tests/data/catalog.yaml', catalog_yaml=None, kwargs={}), link=False, filter=Filter(sort={'coords': ['latitude']}, subset={}, crop={}, timenorm={}, rename={}, derived={}), variables=['u10', 'v10'], coords=DatasetCoords(t='time', x='longitude', y='latitude', z='depth', s='site'), crop_data=True, buffer=2.0, time_buffer=[0, 0], z1='u10', z2='v10', var=<GridOptions.WIND: 'wind'>, fac=1.0)]), boundary=BOUNDSPEC(model_type='boundspec', shapespec=SHAPESPEC(model_type='shapespec', shape=TMA(model_type='tma', gamma=3.3, d=12.0), per_type='peak', dspr_type='degrees'), location=SIDE(model_type='side', side='west', direction='ccw'), data=CONSTANTPAR(model_type='constantpar', hs=2.0, per=12.0, dir=255.0, dd=25.0)), initial=INITIAL(model_type='initial', kind=DEFAULT(model_type='default')), physics=PHYSICS(model_type='physics', gen=GEN3(model_type='gen3', source_terms=KOMEN(model_type='komen', wind_drag='wu', agrow=False, a=None, cds2=2.3e-05, stpm=0.00302)), sswell=None, negatinp=None, wcapping=None, quadrupl=None, breaking=None, friction=FRICTION_JONSWAP(model_type='jonswap', cfjon=0.038), triad=None, vegetation=None, mud=None, sice=None, turbulence=None, bragg=None, limiter=None, obstacle=None, setup=None, diffraction=None, surfbeat=None, scat=None, deactivate=None), prop=PROP(model_type='prop', scheme=BSBT(model_type='bsbt')), numeric=NUMERIC(model_type='numeric', stop=STOPC(model_type='stopc', dabs=0.02, drel=0.02, curvat=0.02, npnts=98.0, mode=STAT(model_type='stat', mxitst=3, alfa=None), limiter=None), dirimpl=None, sigimpl=None, ctheta=None, csigma=None, setup=None), output=OUTPUT(model_type='output', frame=None, group=None, curve=None, ray=None, isoline=None, points=POINTS(model_type='points', sname='pts', xp=[114.0, 112.5, 115.0], yp=[-34.0, -26.0, -30.0]), ngrid=None, quantity=QUANTITIES(model_type='quantities', quantities=[QUANTITY(model_type='quantity', output=[<BlockOptions.DEPTH: 'depth'>, <BlockOptions.HSIGN: 'hsign'>, <BlockOptions.TPS: 'tps'>, <BlockOptions.DIR: 'dir'>, <BlockOptions.TM01: 'tm01'>], short=None, long=None, lexp=None, hexp=None, excv=-9.0, power=None, ref=None, fswell=None, noswll=None, fmin=None, fmax=None, coord=None), QUANTITY(model_type='quantity', output=[<BlockOptions.HSWELL: 'hswell'>], short=None, long=None, lexp=None, hexp=None, excv=None, power=None, ref=None, fswell=0.125, noswll=None, fmin=None, fmax=None, coord=None)]), output_options=None, block=BLOCK(model_type='block', sname='COMPGRID', fname='swangrid.nc', times=TimeRangeOpen(model_type='open', tbeg=datetime.datetime(1970, 1, 1, 0, 0), delt=datetime.timedelta(seconds=3600), tfmt=1, dfmt='hr', suffix='blk'), header=None, idla=None, output=[<BlockOptions.DEPTH: 'depth'>, <BlockOptions.WIND: 'wind'>, <BlockOptions.HSIGN: 'hsign'>, <BlockOptions.TPS: 'tps'>, <BlockOptions.DIR: 'dir'>], unit=None), table=TABLE(model_type='table', sname='pts', fname='swantable.txt', times=TimeRangeOpen(model_type='open', tbeg=datetime.datetime(1970, 1, 1, 0, 0), delt=datetime.timedelta(seconds=3600), tfmt=1, dfmt='hr', suffix='tbl'), format='header', output=[<BlockOptions.TIME: 'time'>, <BlockOptions.HSIGN: 'hsign'>, <BlockOptions.HSWELL: 'hswell'>, <BlockOptions.DIR: 'dir'>, <BlockOptions.TPS: 'tps'>, <BlockOptions.TM01: 'tm01'>]), specout=SPECOUT(model_type='specout', sname='pts', fname='swanspec.nc', times=TimeRangeOpen(model_type='open', tbeg=datetime.datetime(1970, 1, 1, 0, 0), delt=datetime.timedelta(seconds=3600), tfmt=1, dfmt='hr', suffix='spc'), dim=SPEC2D(model_type='spec2d'), freq=ABS(model_type='abs')), nestout=None, test=None), lockup=LOCKUP(model_type='lockup', compute=COMPUTE_STAT(model_type='stat', times=NONSTATIONARY(model_type='nonstationary', tbeg=datetime.datetime(1970, 1, 1, 0, 0), delt=datetime.timedelta(seconds=3600), tfmt=1, dfmt='sec', suffix='', tend=datetime.datetime(1970, 1, 2, 0, 0)), hotfile=HOTFILE(model_type='hotfile', fname=PosixPath('hotfile.txt'), format='free'), hottimes=[1, -1], suffix='_%Y%m%dT%H%M%S')))"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from rompy.swan.config import SwanConfigComponents\n",
    "\n",
    "conf_dict = yaml.load(open(\"example_sensitivity.yml\"), Loader=yaml.Loader)\n",
    "config = SwanConfigComponents(**conf_dict)\n",
    "config"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Examine components"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing'\n"
     ]
    }
   ],
   "source": [
    "# Project\n",
    "\n",
    "print(config.startup.project.render())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GEN3 KOMEN cds2=2.3e-05 stpm=0.00302 DRAG WU\n"
     ]
    }
   ],
   "source": [
    "# Source terms\n",
    "\n",
    "print(config.physics.gen.render())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sensitivity config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def set_experiment(config, source_terms):\n",
    "    \"\"\"Return a new config object for a given experiment\"\"\"\n",
    "    new_config = deepcopy(config)\n",
    "    new_config.startup.project.title2 = f\"Experiment {source_terms.model_type.upper()}\"\n",
    "    new_config.physics.gen.source_terms = source_terms\n",
    "    return new_config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "TimeRange(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 2, 0, 0), duration=datetime.timedelta(days=1), interval=datetime.timedelta(seconds=3600), include_end=True)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from rompy.core.time import TimeRange\n",
    "\n",
    "period = TimeRange(\n",
    "    start=\"2023-01-01T00:00:00\",\n",
    "    end=\"2023-01-02T00:00:00\",\n",
    "    interval=\"1h\"\n",
    ")\n",
    "\n",
    "period"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment KOMEN'\n",
      "KOMEN DRAG WU\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment JANSSEN'\n",
      "JANSSEN DRAG WU\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment WESTHUYSEN'\n",
      "WESTHUYSEN DRAG WU\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment ST6C1'\n",
      "ST6 a1sds=4.7e-07 a2sds=6.6e-06 p1sds=4.0 p2sds=4.0 UP HWANG VECTAU U10PROXY windscaling=28.0 AGROW\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment ST6C2'\n",
      "ST6 a1sds=4.7e-07 a2sds=6.6e-06 p1sds=4.0 p2sds=4.0 UP FAN VECTAU U10PROXY windscaling=28.0 AGROW\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment ST6C3'\n",
      "ST6 a1sds=2.8e-06 a2sds=3.5e-05 p1sds=4.0 p2sds=4.0 UP HWANG VECTAU U10PROXY windscaling=32.0 AGROW\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment ST6C4'\n",
      "ST6 a1sds=2.8e-06 a2sds=3.5e-05 p1sds=4.0 p2sds=4.0 UP HWANG VECTAU U10PROXY windscaling=32.0 DEBIAS cdfac=0.89 AGROW\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment ST6C5'\n",
      "ST6 a1sds=6.5e-06 a2sds=8.5e-05 p1sds=4.0 p2sds=4.0 UP HWANG VECTAU U10PROXY windscaling=35.0 DEBIAS cdfac=0.89 AGROW\n"
     ]
    }
   ],
   "source": [
    "from rompy.model import ModelRun\n",
    "from rompy.swan.subcomponents.physics import KOMEN, JANSSEN, WESTHUYSEN, ST6C1, ST6C2, ST6C3, ST6C4, ST6C5\n",
    "runs = []\n",
    "for component in [KOMEN, JANSSEN, WESTHUYSEN, ST6C1, ST6C2, ST6C3, ST6C4, ST6C5]:\n",
    "    source_terms = component()\n",
    "    run_id = f\"{source_terms.model_type.lower()}\"\n",
    "    new_config = set_experiment(config, source_terms=source_terms)\n",
    "\n",
    "    print(f\"\\n{new_config.startup.project.render()}\")\n",
    "    print(f\"{new_config.physics.gen.source_terms.render()}\")\n",
    "\n",
    "    runs.append(ModelRun(\n",
    "        run_id=run_id,\n",
    "        config=new_config,\n",
    "        period=period,\n",
    "        output_dir=str(workdir)),\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Generate workspaces"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: komen\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/komen/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/komen/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: janssen\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/janssen/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/janssen/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: westhuysen\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/westhuysen/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/westhuysen/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: st6c1\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/st6c1/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/st6c1/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: st6c2\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/st6c2/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/st6c2/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: st6c3\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/st6c3/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/st6c3/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: st6c4\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/st6c4/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/st6c4/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: st6c5\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/st6c5/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/st6c5/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "for run in runs:\n",
    "    run()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Check the workspace"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[PosixPath('example_sensitivity/janssen'),\n",
       " PosixPath('example_sensitivity/komen'),\n",
       " PosixPath('example_sensitivity/st6c1'),\n",
       " PosixPath('example_sensitivity/st6c2'),\n",
       " PosixPath('example_sensitivity/st6c3'),\n",
       " PosixPath('example_sensitivity/st6c4'),\n",
       " PosixPath('example_sensitivity/st6c5'),\n",
       " PosixPath('example_sensitivity/westhuysen')]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "modeldirs = sorted(workdir.glob(\"*\"))\n",
    "modeldirs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[PosixPath('example_sensitivity/janssen/INPUT'),\n",
       " PosixPath('example_sensitivity/janssen/bottom.grd'),\n",
       " PosixPath('example_sensitivity/janssen/wind.grd')]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted(modeldirs[0].glob(\"*\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "! Rompy SwanConfig\n",
      "! Template: /source/csiro/rompy/rompy/templates/swancomp\n",
      "! Generated: 2025-01-28 06:49:11.790669 on rafael-XPS by rguedes\n",
      "\n",
      "\n",
      "! Startup -------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "PROJECT name='Test sensitivity' nr='run1' title1='Source terms sensitivity testing' title2='Experiment JANSSEN'\n",
      "\n",
      "SET level=0.0 depmin=0.05 NAUTICAL\n",
      "\n",
      "MODE NONSTATIONARY TWODIMENSIONAL\n",
      "\n",
      "COORDINATES SPHERICAL CCM\n",
      "\n",
      "! Computational Grid --------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "\n",
      "CGRID REGULAR xpc=110.0 ypc=-35.2 alpc=4.0 xlenc=7.5 ylenc=12.5 mxc=14 myc=24 CIRCLE mdc=36 flow=0.04 fhigh=1.0\n",
      "\n",
      "! Input Grids ---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "INPGRID BOTTOM REG 109.0 -36.0 0.0 9 14 1.0 1.0 EXC -99.0\n",
      "READINP BOTTOM -1.0 'bottom.grd' 3 FREE\n",
      "\n",
      "INPGRID WIND REG 110.0 -35.0 0.0 1 2 5.0 5.0 EXC -99.0 NONSTATION 20230101.000000 6.0 HR\n",
      "READINP WIND 1.0 'wind.grd' 3 0 1 0 FREE\n",
      "\n",
      "\n",
      "\n",
      "! Boundary and Initial conditions -------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "BOUND SHAPESPEC TMA gamma=3.3 d=12.0 PEAK DSPR DEGREES\n",
      "BOUNDSPEC SIDE WEST CCW CONSTANT PAR hs=2.0 per=12.0 dir=255.0 dd=25.0\n",
      "\n",
      "INITIAL DEFAULT\n",
      "\n",
      "\n",
      "! Physics -------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "GEN3 JANSSEN DRAG WU\n",
      "\n",
      "FRICTION JONSWAP CONSTANT cfjon=0.038\n",
      "\n",
      "\n",
      "! Numerics ------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "PROP BSBT\n",
      "\n",
      "NUMERIC STOPC dabs=0.02 drel=0.02 curvat=0.02 npnts=98.0 STATIONARY mxitst=3\n",
      "\n",
      "\n",
      "! Output --------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "POINTS sname='pts' &\n",
      "    xp=114.0 yp=-34.0 &\n",
      "    xp=112.5 yp=-26.0 &\n",
      "    xp=115.0 yp=-30.0\n",
      "\n",
      "QUANTITY DEPTH HSIGN TPS DIR TM01 excv=-9.0\n",
      "\n",
      "QUANTITY HSWELL fswell=0.125\n",
      "\n",
      "BLOCK sname='COMPGRID' fname='swangrid.nc' &\n",
      "    DEPTH &\n",
      "    WIND &\n",
      "    HSIGN &\n",
      "    TPS &\n",
      "    DIR &\n",
      "    OUTPUT tbegblk=20230101.000000 deltblk=1.0 HR\n",
      "\n",
      "TABLE sname='pts' HEADER fname='swantable.txt' &\n",
      "    TIME &\n",
      "    HSIGN &\n",
      "    HSWELL &\n",
      "    DIR &\n",
      "    TPS &\n",
      "    TM01 &\n",
      "    OUTPUT tbegtbl=20230101.000000 delttbl=1.0 HR\n",
      "\n",
      "SPECOUT sname='pts' SPEC2D ABS fname='swanspec.nc' OUTPUT tbegspc=20230101.000000 deltspc=1.0 HR\n",
      "\n",
      "\n",
      "! Lockup --------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "COMPUTE STATIONARY time=20230101.000000\n",
      "COMPUTE STATIONARY time=20230101.010000\n",
      "HOTFILE fname='hotfile_20230101T010000.txt' FREE\n",
      "COMPUTE STATIONARY time=20230101.020000\n",
      "COMPUTE STATIONARY time=20230101.030000\n",
      "COMPUTE STATIONARY time=20230101.040000\n",
      "COMPUTE STATIONARY time=20230101.050000\n",
      "COMPUTE STATIONARY time=20230101.060000\n",
      "COMPUTE STATIONARY time=20230101.070000\n",
      "COMPUTE STATIONARY time=20230101.080000\n",
      "COMPUTE STATIONARY time=20230101.090000\n",
      "COMPUTE STATIONARY time=20230101.100000\n",
      "COMPUTE STATIONARY time=20230101.110000\n",
      "COMPUTE STATIONARY time=20230101.120000\n",
      "COMPUTE STATIONARY time=20230101.130000\n",
      "COMPUTE STATIONARY time=20230101.140000\n",
      "COMPUTE STATIONARY time=20230101.150000\n",
      "COMPUTE STATIONARY time=20230101.160000\n",
      "COMPUTE STATIONARY time=20230101.170000\n",
      "COMPUTE STATIONARY time=20230101.180000\n",
      "COMPUTE STATIONARY time=20230101.190000\n",
      "COMPUTE STATIONARY time=20230101.200000\n",
      "COMPUTE STATIONARY time=20230101.210000\n",
      "COMPUTE STATIONARY time=20230101.220000\n",
      "COMPUTE STATIONARY time=20230101.230000\n",
      "COMPUTE STATIONARY time=20230102.000000\n",
      "HOTFILE fname='hotfile_20230102T000000.txt' FREE\n",
      "STOP\n"
     ]
    }
   ],
   "source": [
    "input = modeldirs[0] / \"INPUT\"\n",
    "print(input.read_text())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "docker run -v ./example_sensitivity/janssen:/home oceanum/swan:4141 swan.exe > example_sensitivity/janssen/swan.log\n",
      "docker run -v ./example_sensitivity/komen:/home oceanum/swan:4141 swan.exe > example_sensitivity/komen/swan.log\n",
      "docker run -v ./example_sensitivity/st6c1:/home oceanum/swan:4141 swan.exe > example_sensitivity/st6c1/swan.log\n",
      "docker run -v ./example_sensitivity/st6c2:/home oceanum/swan:4141 swan.exe > example_sensitivity/st6c2/swan.log\n",
      "docker run -v ./example_sensitivity/st6c3:/home oceanum/swan:4141 swan.exe > example_sensitivity/st6c3/swan.log\n",
      "docker run -v ./example_sensitivity/st6c4:/home oceanum/swan:4141 swan.exe > example_sensitivity/st6c4/swan.log\n",
      "docker run -v ./example_sensitivity/st6c5:/home oceanum/swan:4141 swan.exe > example_sensitivity/st6c5/swan.log\n",
      "docker run -v ./example_sensitivity/westhuysen:/home oceanum/swan:4141 swan.exe > example_sensitivity/westhuysen/swan.log\n"
     ]
    }
   ],
   "source": [
    "for modeldir in modeldirs:\n",
    "    cmd = [\"docker\", \"run\", \"-v\", f\"./{modeldir}:/home\", \"oceanum/swan:4141\", \"swan.exe\", \">\", f\"{modeldir}/swan.log\"]\n",
    "    print(\" \".join(cmd))\n",
    "    os.system(\" \".join(cmd))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[PosixPath('example_sensitivity/janssen/swangrid.nc'), PosixPath('example_sensitivity/janssen/swanspec.nc')]\n",
      "[PosixPath('example_sensitivity/komen/swangrid.nc'), PosixPath('example_sensitivity/komen/swanspec.nc')]\n",
      "[PosixPath('example_sensitivity/st6c1/swangrid.nc'), PosixPath('example_sensitivity/st6c1/swanspec.nc')]\n",
      "[PosixPath('example_sensitivity/st6c2/swangrid.nc'), PosixPath('example_sensitivity/st6c2/swanspec.nc')]\n",
      "[PosixPath('example_sensitivity/st6c3/swangrid.nc'), PosixPath('example_sensitivity/st6c3/swanspec.nc')]\n",
      "[PosixPath('example_sensitivity/st6c4/swangrid.nc'), PosixPath('example_sensitivity/st6c4/swanspec.nc')]\n",
      "[PosixPath('example_sensitivity/st6c5/swangrid.nc'), PosixPath('example_sensitivity/st6c5/swanspec.nc')]\n",
      "[PosixPath('example_sensitivity/westhuysen/swangrid.nc'), PosixPath('example_sensitivity/westhuysen/swanspec.nc')]\n"
     ]
    }
   ],
   "source": [
    "# Check for output files\n",
    "for modeldir in modeldirs:\n",
    "    print(sorted(modeldir.glob(\"*.nc\")))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot outputs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import xarray as xr\n",
    "import matplotlib.pyplot as plt\n",
    "import cartopy.crs as ccrs\n",
    "from wavespectra import read_ncswan\n",
    "\n",
    "pd.set_option(\"display.notebook_repr_html\", False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def read_gridded_output(run):\n",
    "    \"\"\"Read mean gridded output from a model run\"\"\"\n",
    "    modeldir = Path(run.output_dir) / run.run_id\n",
    "    dset = xr.open_dataset(modeldir / run.config.output.block.fname)\n",
    "    return dset.mean(\"time\")\n",
    "\n",
    "\n",
    "def read_spectra_output(run):\n",
    "    \"\"\"Read mean spectra output from a model run\"\"\"\n",
    "    modeldir = Path(run.output_dir) / run.run_id\n",
    "    dset = read_ncswan(modeldir / run.config.output.specout.fname)\n",
    "    return dset.mean(\"time\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 75kB\n",
       "Dimensions:       (source_terms: 8, yc: 25, xc: 15)\n",
       "Coordinates:\n",
       "    longitude     (yc, xc) float32 2kB 110.0 110.5 111.1 ... 115.5 116.1 116.6\n",
       "    latitude      (yc, xc) float32 2kB -35.2 -35.16 -35.13 ... -22.24 -22.21\n",
       "  * source_terms  (source_terms) &lt;U10 320B &#x27;komen&#x27; &#x27;janssen&#x27; ... &#x27;st6c4&#x27; &#x27;st6c5&#x27;\n",
       "Dimensions without coordinates: yc, xc\n",
       "Data variables:\n",
       "    depth         (source_terms, yc, xc) float32 12kB 4.824e+03 4.16e+03 ... nan\n",
       "    xwnd          (source_terms, yc, xc) float32 12kB -0.8986 -1.029 ... nan nan\n",
       "    ywnd          (source_terms, yc, xc) float32 12kB 6.718 6.65 ... nan nan\n",
       "    hs            (source_terms, yc, xc) float32 12kB 1.019 0.6307 ... nan nan\n",
       "    tps           (source_terms, yc, xc) float32 12kB 11.66 11.66 ... nan nan\n",
       "    theta0        (source_terms, yc, xc) float32 12kB 255.5 291.2 ... nan nan</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-7f4fee95-0c1e-45a2-9276-0737efe6e7da' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-7f4fee95-0c1e-45a2-9276-0737efe6e7da' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>source_terms</span>: 8</li><li><span>yc</span>: 25</li><li><span>xc</span>: 15</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-5536fc98-57b6-4d0b-ab65-7d70a6e0678e' class='xr-section-summary-in' type='checkbox'  checked><label for='section-5536fc98-57b6-4d0b-ab65-7d70a6e0678e' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>longitude</span></div><div class='xr-var-dims'>(yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>110.0 110.5 111.1 ... 116.1 116.6</div><input id='attrs-fe5943c2-741b-4972-919e-e97b68db143b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-fe5943c2-741b-4972-919e-e97b68db143b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-68ad50f9-0af2-439c-a55b-9787d4336544' class='xr-var-data-in' type='checkbox'><label for='data-68ad50f9-0af2-439c-a55b-9787d4336544' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>long_name :</span></dt><dd>longitude</dd><dt><span>standard_name :</span></dt><dd>longitude</dd></dl></div><div class='xr-var-data'><pre>array([[110.      , 110.53441 , 111.06882 , 111.603226, 112.137634,\n",
       "        112.67204 , 113.20646 , 113.74087 , 114.275276, 114.809685,\n",
       "        115.34409 , 115.8785  , 116.41291 , 116.94732 , 117.48173 ],\n",
       "       [109.96367 , 110.49808 , 111.032486, 111.566895, 112.1013  ,\n",
       "        112.63571 , 113.17013 , 113.70454 , 114.238945, 114.77335 ,\n",
       "        115.30776 , 115.84217 , 116.37658 , 116.91099 , 117.4454  ],\n",
       "       [109.92734 , 110.46175 , 110.996155, 111.53056 , 112.06497 ,\n",
       "        112.59938 , 113.13379 , 113.668205, 114.202614, 114.73702 ,\n",
       "        115.27143 , 115.80584 , 116.34025 , 116.87466 , 117.409065],\n",
       "       [109.89101 , 110.425415, 110.95982 , 111.49423 , 112.02864 ,\n",
       "        112.56305 , 113.09746 , 113.631874, 114.16628 , 114.70069 ,\n",
       "        115.2351  , 115.76951 , 116.30392 , 116.838326, 117.372734],\n",
       "       [109.854675, 110.389084, 110.92349 , 111.4579  , 111.99231 ,\n",
       "        112.52672 , 113.06113 , 113.59554 , 114.12995 , 114.66436 ,\n",
       "        115.19877 , 115.73318 , 116.267586, 116.801994, 117.3364  ],\n",
       "       [109.818344, 110.35275 , 110.88716 , 111.42157 , 111.95598 ,\n",
       "        112.49039 , 113.024796, 113.559204, 114.09362 , 114.62803 ,\n",
       "        115.16244 , 115.696846, 116.231255, 116.76566 , 117.30007 ],\n",
       "       [109.78201 , 110.31642 , 110.85083 , 111.38524 , 111.91965 ,\n",
       "        112.454056, 112.988464, 113.52287 , 114.05728 , 114.5917  ,\n",
       "...\n",
       "        114.690125, 115.22453 , 115.75894 , 116.29335 , 116.82777 ],\n",
       "       [109.3097  , 109.84411 , 110.37852 , 110.91293 , 111.44734 ,\n",
       "        111.98175 , 112.51616 , 113.05057 , 113.58498 , 114.119385,\n",
       "        114.65379 , 115.1882  , 115.72261 , 116.25702 , 116.791435],\n",
       "       [109.27337 , 109.80778 , 110.342186, 110.876595, 111.41101 ,\n",
       "        111.94542 , 112.47983 , 113.01424 , 113.548645, 114.08305 ,\n",
       "        114.61746 , 115.15187 , 115.68628 , 116.22069 , 116.755104],\n",
       "       [109.23704 , 109.77145 , 110.305855, 110.84026 , 111.37467 ,\n",
       "        111.90909 , 112.4435  , 112.977905, 113.512314, 114.04672 ,\n",
       "        114.58113 , 115.11554 , 115.64995 , 116.18436 , 116.718765],\n",
       "       [109.20071 , 109.735115, 110.26952 , 110.80393 , 111.33834 ,\n",
       "        111.87276 , 112.407166, 112.941574, 113.47598 , 114.01039 ,\n",
       "        114.5448  , 115.07921 , 115.61362 , 116.148026, 116.682434],\n",
       "       [109.164375, 109.698784, 110.23319 , 110.7676  , 111.30201 ,\n",
       "        111.836426, 112.370834, 112.90524 , 113.43965 , 113.97406 ,\n",
       "        114.50847 , 115.04288 , 115.577286, 116.111694, 116.6461  ],\n",
       "       [109.128044, 109.66245 , 110.19686 , 110.73127 , 111.26568 ,\n",
       "        111.80009 , 112.3345  , 112.86891 , 113.40332 , 113.93773 ,\n",
       "        114.47214 , 115.006546, 115.540955, 116.07536 , 116.60977 ]],\n",
       "      dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>latitude</span></div><div class='xr-var-dims'>(yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-35.2 -35.16 ... -22.24 -22.21</div><input id='attrs-2b597d58-dd4e-4942-a2b8-effa7f18ac1b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2b597d58-dd4e-4942-a2b8-effa7f18ac1b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1aaf2593-1708-43bf-9261-9afe511afe14' class='xr-var-data-in' type='checkbox'><label for='data-1aaf2593-1708-43bf-9261-9afe511afe14' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>long_name :</span></dt><dd>latitude</dd><dt><span>standard_name :</span></dt><dd>latitude</dd></dl></div><div class='xr-var-data'><pre>array([[-35.2     , -35.162632, -35.125263, -35.08789 , -35.05052 ,\n",
       "        -35.013153, -34.975784, -34.938416, -34.901043, -34.863674,\n",
       "        -34.826305, -34.788937, -34.751568, -34.714195, -34.676826],\n",
       "       [-34.680435, -34.643066, -34.605698, -34.56833 , -34.530956,\n",
       "        -34.493587, -34.45622 , -34.41885 , -34.38148 , -34.34411 ,\n",
       "        -34.30674 , -34.26937 , -34.232002, -34.194633, -34.15726 ],\n",
       "       [-34.160873, -34.1235  , -34.086132, -34.048763, -34.011395,\n",
       "        -33.974022, -33.936653, -33.899284, -33.861916, -33.824547,\n",
       "        -33.787178, -33.749805, -33.712437, -33.675068, -33.6377  ],\n",
       "       [-33.641308, -33.60394 , -33.566566, -33.529198, -33.49183 ,\n",
       "        -33.45446 , -33.41709 , -33.37972 , -33.34235 , -33.30498 ,\n",
       "        -33.267612, -33.230244, -33.19287 , -33.155502, -33.118134],\n",
       "       [-33.121742, -33.084373, -33.047005, -33.009632, -32.972263,\n",
       "        -32.934895, -32.897526, -32.860157, -32.822784, -32.785416,\n",
       "        -32.748047, -32.71068 , -32.67331 , -32.635937, -32.598568],\n",
       "       [-32.602177, -32.564808, -32.52744 , -32.49007 , -32.452698,\n",
       "        -32.41533 , -32.37796 , -32.34059 , -32.303223, -32.265854,\n",
       "        -32.22848 , -32.191113, -32.153744, -32.116375, -32.079002],\n",
       "       [-32.08261 , -32.045242, -32.007874, -31.970505, -31.933134,\n",
       "        -31.895765, -31.858397, -31.821026, -31.783657, -31.746286,\n",
       "...\n",
       "        -25.474142, -25.436771, -25.399403, -25.362034, -25.324665],\n",
       "       [-25.328274, -25.290903, -25.253532, -25.216164, -25.178795,\n",
       "        -25.141426, -25.104055, -25.066685, -25.029316, -24.991947,\n",
       "        -24.954578, -24.917208, -24.879837, -24.842468, -24.8051  ],\n",
       "       [-24.808708, -24.77134 , -24.73397 , -24.696602, -24.659231,\n",
       "        -24.62186 , -24.584492, -24.547123, -24.509754, -24.472383,\n",
       "        -24.435013, -24.397644, -24.360275, -24.322906, -24.285536],\n",
       "       [-24.289143, -24.251774, -24.214405, -24.177036, -24.139666,\n",
       "        -24.102295, -24.064926, -24.027557, -23.990189, -23.952818,\n",
       "        -23.915447, -23.878078, -23.84071 , -23.80334 , -23.76597 ],\n",
       "       [-23.769579, -23.732208, -23.69484 , -23.65747 , -23.620102,\n",
       "        -23.582731, -23.54536 , -23.507992, -23.470623, -23.433254,\n",
       "        -23.395884, -23.358513, -23.321144, -23.283775, -23.246407],\n",
       "       [-23.250015, -23.212646, -23.175276, -23.137907, -23.100536,\n",
       "        -23.063168, -23.025799, -22.988428, -22.95106 , -22.913689,\n",
       "        -22.87632 , -22.838951, -22.80158 , -22.764212, -22.726841],\n",
       "       [-22.73045 , -22.69308 , -22.65571 , -22.618341, -22.58097 ,\n",
       "        -22.543602, -22.506233, -22.468863, -22.431494, -22.394123,\n",
       "        -22.356754, -22.319386, -22.282015, -22.244646, -22.207275]],\n",
       "      dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>source_terms</span></div><div class='xr-var-dims'>(source_terms)</div><div class='xr-var-dtype'>&lt;U10</div><div class='xr-var-preview xr-preview'>&#x27;komen&#x27; &#x27;janssen&#x27; ... &#x27;st6c5&#x27;</div><input id='attrs-0f4ebbd9-dea9-4be9-a403-2f056549aa3b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0f4ebbd9-dea9-4be9-a403-2f056549aa3b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-74b820ff-772d-45cc-80cf-63a5654689e1' class='xr-var-data-in' type='checkbox'><label for='data-74b820ff-772d-45cc-80cf-63a5654689e1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;komen&#x27;, &#x27;janssen&#x27;, &#x27;westhuysen&#x27;, &#x27;st6c1&#x27;, &#x27;st6c2&#x27;, &#x27;st6c3&#x27;, &#x27;st6c4&#x27;,\n",
       "       &#x27;st6c5&#x27;], dtype=&#x27;&lt;U10&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-a147dd57-1758-49ce-8c46-e1e225911d14' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a147dd57-1758-49ce-8c46-e1e225911d14' class='xr-section-summary' >Data variables: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>depth</span></div><div class='xr-var-dims'>(source_terms, yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>4.824e+03 4.16e+03 ... nan nan</div><input id='attrs-30f49c60-890f-4772-9929-4369a5241b23' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-30f49c60-890f-4772-9929-4369a5241b23' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a51e34d2-4b22-4da9-b3e5-c8ed3238fa45' class='xr-var-data-in' type='checkbox'><label for='data-a51e34d2-4b22-4da9-b3e5-c8ed3238fa45' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[4823.951 , 4160.235 , 3517.904 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        [4081.297 , 3441.2422, 2892.3357, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3056.671 , 2631.195 , 2384.4294, ...,       nan,       nan,\n",
       "               nan],\n",
       "        ...,\n",
       "        [3246.6487, 4145.945 , 4225.1567, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3510.1592, 4227.9146, 4563.9614, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3835.8284, 4350.438 , 4695.601 , ...,       nan,       nan,\n",
       "               nan]],\n",
       "\n",
       "       [[4823.951 , 4160.235 , 3517.904 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        [4081.297 , 3441.2422, 2892.3357, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3056.671 , 2631.195 , 2384.4294, ...,       nan,       nan,\n",
       "               nan],\n",
       "...\n",
       "        [3246.6487, 4145.945 , 4225.1567, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3510.1592, 4227.9146, 4563.9614, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3835.8284, 4350.438 , 4695.601 , ...,       nan,       nan,\n",
       "               nan]],\n",
       "\n",
       "       [[4823.951 , 4160.235 , 3517.904 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        [4081.297 , 3441.2422, 2892.3357, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3056.671 , 2631.195 , 2384.4294, ...,       nan,       nan,\n",
       "               nan],\n",
       "        ...,\n",
       "        [3246.6487, 4145.945 , 4225.1567, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3510.1592, 4227.9146, 4563.9614, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [3835.8284, 4350.438 , 4695.601 , ...,       nan,       nan,\n",
       "               nan]]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>xwnd</span></div><div class='xr-var-dims'>(source_terms, yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-0.8986 -1.029 -1.157 ... nan nan</div><input id='attrs-3b62c60a-4cab-49c2-88db-f82bd5a2d651' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-3b62c60a-4cab-49c2-88db-f82bd5a2d651' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c9de86e2-c728-4c57-a4ac-b606da6260b9' class='xr-var-data-in' type='checkbox'><label for='data-c9de86e2-c728-4c57-a4ac-b606da6260b9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[-0.8985871, -1.0285959, -1.157384 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [-1.1927854, -1.3132724, -1.432905 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [-1.6694846, -1.7384562, -1.8047427, ...,        nan,\n",
       "                nan,        nan],\n",
       "        ...,\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan]],\n",
       "\n",
       "       [[-0.8985871, -1.0285959, -1.157384 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [-1.1927854, -1.3132724, -1.432905 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [-1.6694846, -1.7384562, -1.8047427, ...,        nan,\n",
       "                nan,        nan],\n",
       "...\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan]],\n",
       "\n",
       "       [[-0.8985871, -1.0285959, -1.157384 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [-1.1927854, -1.3132724, -1.432905 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [-1.6694846, -1.7384562, -1.8047427, ...,        nan,\n",
       "                nan,        nan],\n",
       "        ...,\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [       nan,        nan,        nan, ...,        nan,\n",
       "                nan,        nan]]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ywnd</span></div><div class='xr-var-dims'>(source_terms, yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>6.718 6.65 6.582 ... nan nan nan</div><input id='attrs-b1c1c9e2-63d0-44d1-ae8c-a63f45b0a7d6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b1c1c9e2-63d0-44d1-ae8c-a63f45b0a7d6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d9381721-149b-4917-9ebe-fce997cdb513' class='xr-var-data-in' type='checkbox'><label for='data-d9381721-149b-4917-9ebe-fce997cdb513' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[6.7184663, 6.650105 , 6.5822325, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [6.903531 , 6.849573 , 6.785363 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        [7.2056627, 7.13828  , 7.054905 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        ...,\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan]],\n",
       "\n",
       "       [[6.7184663, 6.650105 , 6.5822325, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [6.903531 , 6.849573 , 6.785363 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        [7.2056627, 7.13828  , 7.054905 , ...,       nan,       nan,\n",
       "               nan],\n",
       "...\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan]],\n",
       "\n",
       "       [[6.7184663, 6.650105 , 6.5822325, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [6.903531 , 6.849573 , 6.785363 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        [7.2056627, 7.13828  , 7.054905 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        ...,\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [      nan,       nan,       nan, ...,       nan,       nan,\n",
       "               nan]]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>hs</span></div><div class='xr-var-dims'>(source_terms, yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>1.019 0.6307 0.6288 ... nan nan nan</div><input id='attrs-d5527b71-1d8b-4de2-8a1e-df14a8ddcfa4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d5527b71-1d8b-4de2-8a1e-df14a8ddcfa4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bf59cd5b-77b6-45f3-b5ad-cce861ec550d' class='xr-var-data-in' type='checkbox'><label for='data-bf59cd5b-77b6-45f3-b5ad-cce861ec550d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[1.0192268 , 0.63066536, 0.6288341 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.1814324 , 1.3336895 , 1.2929169 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.2695091 , 1.4816737 , 1.4532303 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        ...,\n",
       "        [1.7042453 , 1.9786367 , 1.9581891 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.6415908 , 1.8393509 , 1.8341626 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.5887021 , 1.671926  , 1.694815  , ...,        nan,\n",
       "                nan,        nan]],\n",
       "\n",
       "       [[1.0107424 , 0.6126289 , 0.60542625, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.1889399 , 1.32725   , 1.2820215 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.2861719 , 1.4874724 , 1.4557636 , ...,        nan,\n",
       "                nan,        nan],\n",
       "...\n",
       "        [1.6818448 , 1.9637436 , 1.9407938 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.6280103 , 1.8407547 , 1.8310803 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.574511  , 1.67745   , 1.6956695 , ...,        nan,\n",
       "                nan,        nan]],\n",
       "\n",
       "       [[1.0049133 , 0.5968502 , 0.5881523 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.1108131 , 1.1534166 , 1.10535   , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.1872003 , 1.3097018 , 1.2791528 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        ...,\n",
       "        [1.7535931 , 2.0571308 , 2.0438855 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.6953642 , 1.9304483 , 1.9248636 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [1.6400958 , 1.7745602 , 1.7801449 , ...,        nan,\n",
       "                nan,        nan]]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>tps</span></div><div class='xr-var-dims'>(source_terms, yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>11.66 11.66 11.66 ... nan nan nan</div><input id='attrs-de05e8c4-7e83-424e-9052-10da13abfd8d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-de05e8c4-7e83-424e-9052-10da13abfd8d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2eb5bbad-89d9-4666-9bd9-2a0f40e55f90' class='xr-var-data-in' type='checkbox'><label for='data-2eb5bbad-89d9-4666-9bd9-2a0f40e55f90' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[11.661121 , 11.661121 , 11.661732 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [11.661121 , 11.661793 , 11.66222  , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [11.661121 , 11.662037 , 11.662708 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        ...,\n",
       "        [ 7.6884065,  7.8873553,  7.903043 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [ 7.7627187,  7.927702 ,  7.9547405, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [ 7.8102965,  7.9473553,  7.978271 , ...,        nan,\n",
       "                nan,        nan]],\n",
       "\n",
       "       [[11.661121 , 11.66164  , 11.662373 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [11.661121 , 11.662556 , 11.663898 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [11.661121 , 11.663197 , 10.905086 , ...,        nan,\n",
       "                nan,        nan],\n",
       "...\n",
       "        [ 7.538561 ,  7.665639 ,  7.6623135, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [ 8.1478   ,  7.7109585,  7.7162695, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [ 8.539263 ,  7.7229834,  7.735404 , ...,        nan,\n",
       "                nan,        nan]],\n",
       "\n",
       "       [[11.661121 , 11.661884 , 11.662403 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [11.661121 , 11.661884 , 11.66222  , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [11.661121 , 11.661945 , 11.6628   , ...,        nan,\n",
       "                nan,        nan],\n",
       "        ...,\n",
       "        [ 7.7295146,  7.864436 ,  7.868037 , ...,        nan,\n",
       "                nan,        nan],\n",
       "        [ 7.7735524,  7.9105506,  7.9117393, ...,        nan,\n",
       "                nan,        nan],\n",
       "        [ 7.8086786,  7.9306006,  7.932705 , ...,        nan,\n",
       "                nan,        nan]]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>theta0</span></div><div class='xr-var-dims'>(source_terms, yc, xc)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>255.5 291.2 291.5 ... nan nan nan</div><input id='attrs-70294b1b-b90e-42ac-a6f2-2a0626cf50b2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-70294b1b-b90e-42ac-a6f2-2a0626cf50b2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9e8795a3-f45a-4141-aa0d-61d4d12dc008' class='xr-var-data-in' type='checkbox'><label for='data-9e8795a3-f45a-4141-aa0d-61d4d12dc008' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[[255.51137, 291.2079 , 291.5412 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        [232.16513, 207.59586, 205.65694, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [215.15535, 197.54132, 198.0902 , ...,       nan,       nan,\n",
       "               nan],\n",
       "        ...,\n",
       "        [178.59105, 182.74272, 189.30594, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [183.33075, 184.87103, 189.97305, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [187.59137, 180.92574, 186.74869, ...,       nan,       nan,\n",
       "               nan]],\n",
       "\n",
       "       [[255.24213, 287.9488 , 287.68384, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [229.47887, 206.4798 , 204.27303, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [212.41219, 196.26465, 195.89618, ...,       nan,       nan,\n",
       "               nan],\n",
       "...\n",
       "        [178.39902, 182.91827, 189.82843, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [182.74205, 184.25159, 189.59729, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [187.41913, 180.35092, 186.54213, ...,       nan,       nan,\n",
       "               nan]],\n",
       "\n",
       "       [[255.1523 , 286.08612, 285.77368, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [242.54309, 226.48305, 225.45906, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [229.49602, 212.3399 , 212.71413, ...,       nan,       nan,\n",
       "               nan],\n",
       "        ...,\n",
       "        [175.19928, 180.99101, 187.77765, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [179.3098 , 182.44803, 187.57178, ...,       nan,       nan,\n",
       "               nan],\n",
       "        [183.65086, 178.93758, 185.23143, ...,       nan,       nan,\n",
       "               nan]]], dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-546c4adb-059a-4fb4-ab01-06bc519876df' class='xr-section-summary-in' type='checkbox'  ><label for='section-546c4adb-059a-4fb4-ab01-06bc519876df' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>source_terms</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-c2979726-e385-45ff-b2cc-075e0190d9da' class='xr-index-data-in' type='checkbox'/><label for='index-c2979726-e385-45ff-b2cc-075e0190d9da' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;komen&#x27;, &#x27;janssen&#x27;, &#x27;westhuysen&#x27;, &#x27;st6c1&#x27;, &#x27;st6c2&#x27;, &#x27;st6c3&#x27;, &#x27;st6c4&#x27;,\n",
       "       &#x27;st6c5&#x27;],\n",
       "      dtype=&#x27;object&#x27;, name=&#x27;source_terms&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-f1773bdb-df1d-4b49-ad54-384af4612fe2' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-f1773bdb-df1d-4b49-ad54-384af4612fe2' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 75kB\n",
       "Dimensions:       (source_terms: 8, yc: 25, xc: 15)\n",
       "Coordinates:\n",
       "    longitude     (yc, xc) float32 2kB 110.0 110.5 111.1 ... 115.5 116.1 116.6\n",
       "    latitude      (yc, xc) float32 2kB -35.2 -35.16 -35.13 ... -22.24 -22.21\n",
       "  * source_terms  (source_terms) <U10 320B 'komen' 'janssen' ... 'st6c4' 'st6c5'\n",
       "Dimensions without coordinates: yc, xc\n",
       "Data variables:\n",
       "    depth         (source_terms, yc, xc) float32 12kB 4.824e+03 4.16e+03 ... nan\n",
       "    xwnd          (source_terms, yc, xc) float32 12kB -0.8986 -1.029 ... nan nan\n",
       "    ywnd          (source_terms, yc, xc) float32 12kB 6.718 6.65 ... nan nan\n",
       "    hs            (source_terms, yc, xc) float32 12kB 1.019 0.6307 ... nan nan\n",
       "    tps           (source_terms, yc, xc) float32 12kB 11.66 11.66 ... nan nan\n",
       "    theta0        (source_terms, yc, xc) float32 12kB 255.5 291.2 ... nan nan"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Gridded parameters\n",
    "\n",
    "dsgrid = xr.concat([read_gridded_output(run) for run in runs], dim=\"source_terms\")\n",
    "dsgrid[\"source_terms\"] = [run.run_id for run in runs]\n",
    "dsgrid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 122kB\n",
       "Dimensions:       (source_terms: 8, site: 3, freq: 35, dir: 36)\n",
       "Coordinates:\n",
       "  * freq          (freq) float32 140B 0.04 0.04397 0.04834 ... 0.8275 0.9097 1.0\n",
       "  * dir           (dir) float32 144B 261.0 251.0 241.0 ... 291.0 281.0 271.0\n",
       "  * site          (site) int64 24B 1 2 3\n",
       "  * source_terms  (source_terms) &lt;U10 320B &#x27;komen&#x27; &#x27;janssen&#x27; ... &#x27;st6c4&#x27; &#x27;st6c5&#x27;\n",
       "Data variables:\n",
       "    lon           (source_terms, site) float32 96B dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;\n",
       "    lat           (source_terms, site) float32 96B dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;\n",
       "    efth          (source_terms, site, freq, dir) float32 121kB dask.array&lt;chunksize=(1, 3, 35, 36), meta=np.ndarray&gt;\n",
       "    dpt           (source_terms, site) float32 96B dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;\n",
       "    wspd          (source_terms, site) float32 96B dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;\n",
       "    wdir          (source_terms, site) float32 96B dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-cecd85cd-ce80-404f-b4f3-5d8af5989362' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-cecd85cd-ce80-404f-b4f3-5d8af5989362' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>source_terms</span>: 8</li><li><span class='xr-has-index'>site</span>: 3</li><li><span class='xr-has-index'>freq</span>: 35</li><li><span class='xr-has-index'>dir</span>: 36</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-a02001c7-4fef-4d7a-9429-98eff02b3ba7' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a02001c7-4fef-4d7a-9429-98eff02b3ba7' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>freq</span></div><div class='xr-var-dims'>(freq)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.04 0.04397 0.04834 ... 0.9097 1.0</div><input id='attrs-38f6e691-9448-4974-8576-753eaadbb4e3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-38f6e691-9448-4974-8576-753eaadbb4e3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-abba4ebb-3058-4979-9b88-c3a32c0716ef' class='xr-var-data-in' type='checkbox'><label for='data-abba4ebb-3058-4979-9b88-c3a32c0716ef' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>s-1</dd><dt><span>standard_name :</span></dt><dd>wave_frequency</dd><dt><span>flow :</span></dt><dd>0.04</dd><dt><span>fhigh :</span></dt><dd>0.9999985</dd><dt><span>msc :</span></dt><dd>34</dd></dl></div><div class='xr-var-data'><pre>array([0.04    , 0.043972, 0.048338, 0.053138, 0.058415, 0.064215, 0.070592,\n",
       "       0.077602, 0.085307, 0.093778, 0.103091, 0.113327, 0.124581, 0.136951,\n",
       "       0.15055 , 0.1655  , 0.181934, 0.2     , 0.21986 , 0.241692, 0.265691,\n",
       "       0.292074, 0.321077, 0.35296 , 0.388008, 0.426537, 0.468892, 0.515452,\n",
       "       0.566636, 0.622902, 0.684756, 0.752752, 0.827499, 0.909669, 0.999999],\n",
       "      dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>dir</span></div><div class='xr-var-dims'>(dir)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>261.0 251.0 241.0 ... 281.0 271.0</div><input id='attrs-1702da08-7cea-42c6-b538-c3143382a45b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1702da08-7cea-42c6-b538-c3143382a45b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-521513b3-c58c-4efa-a46d-b32a6e4472f6' class='xr-var-data-in' type='checkbox'><label for='data-521513b3-c58c-4efa-a46d-b32a6e4472f6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([261.      , 251.      , 241.      , 231.      , 221.      , 211.      ,\n",
       "       201.      , 191.      , 181.      , 171.      , 160.99998 , 151.      ,\n",
       "       141.      , 131.      , 120.999985, 110.999985, 100.99999 ,  90.99999 ,\n",
       "        80.99999 ,  70.999985,  60.999985,  50.999985,  40.99999 ,  30.999989,\n",
       "        20.99999 ,  10.999992,   0.999994, 350.99997 , 340.99997 , 330.99997 ,\n",
       "       320.99997 , 310.99997 , 300.99997 , 290.99997 , 281.      , 271.      ],\n",
       "      dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>site</span></div><div class='xr-var-dims'>(site)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 2 3</div><input id='attrs-29b941d2-d2f1-44b6-bffd-cca4dccf04b2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-29b941d2-d2f1-44b6-bffd-cca4dccf04b2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c2ad39a9-d0c4-428e-a919-8e6dd903cded' class='xr-var-data-in' type='checkbox'><label for='data-c2ad39a9-d0c4-428e-a919-8e6dd903cded' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 2, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>source_terms</span></div><div class='xr-var-dims'>(source_terms)</div><div class='xr-var-dtype'>&lt;U10</div><div class='xr-var-preview xr-preview'>&#x27;komen&#x27; &#x27;janssen&#x27; ... &#x27;st6c5&#x27;</div><input id='attrs-c28487de-93ab-4924-9548-6b114ebd1004' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c28487de-93ab-4924-9548-6b114ebd1004' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2b2f491c-5c1e-4809-8ede-2ef6423629bd' class='xr-var-data-in' type='checkbox'><label for='data-2b2f491c-5c1e-4809-8ede-2ef6423629bd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;komen&#x27;, &#x27;janssen&#x27;, &#x27;westhuysen&#x27;, &#x27;st6c1&#x27;, &#x27;st6c2&#x27;, &#x27;st6c3&#x27;, &#x27;st6c4&#x27;,\n",
       "       &#x27;st6c5&#x27;], dtype=&#x27;&lt;U10&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d7f492f1-fe7b-4078-a2a8-54740657bd4f' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d7f492f1-fe7b-4078-a2a8-54740657bd4f' class='xr-section-summary' >Data variables: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>lon</span></div><div class='xr-var-dims'>(source_terms, site)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;</div><input id='attrs-161eaac5-3b05-42ed-b40a-12288ea5f36f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-161eaac5-3b05-42ed-b40a-12288ea5f36f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2726b27d-893c-4558-99ac-7d75507a677d' class='xr-var-data-in' type='checkbox'><label for='data-2726b27d-893c-4558-99ac-7d75507a677d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 96 B </td>\n",
       "                        <td> 12 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8, 3) </td>\n",
       "                        <td> (1, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 8 chunks in 25 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"95\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"45\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"15\" x2=\"45\" y2=\"15\" />\n",
       "  <line x1=\"0\" y1=\"30\" x2=\"45\" y2=\"30\" />\n",
       "  <line x1=\"0\" y1=\"45\" x2=\"45\" y2=\"45\" />\n",
       "  <line x1=\"0\" y1=\"60\" x2=\"45\" y2=\"60\" />\n",
       "  <line x1=\"0\" y1=\"75\" x2=\"45\" y2=\"75\" />\n",
       "  <line x1=\"0\" y1=\"90\" x2=\"45\" y2=\"90\" />\n",
       "  <line x1=\"0\" y1=\"105\" x2=\"45\" y2=\"105\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"45\" y1=\"0\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 45.0,0.0 45.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"22.500000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"65.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,65.000000,60.000000)\">8</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>lat</span></div><div class='xr-var-dims'>(source_terms, site)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;</div><input id='attrs-39fb0858-2b6e-45a4-bb9b-313d6c81da58' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-39fb0858-2b6e-45a4-bb9b-313d6c81da58' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8886cb86-9b9f-490d-9a0e-3822923597e4' class='xr-var-data-in' type='checkbox'><label for='data-8886cb86-9b9f-490d-9a0e-3822923597e4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 96 B </td>\n",
       "                        <td> 12 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8, 3) </td>\n",
       "                        <td> (1, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 8 chunks in 25 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"95\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"45\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"15\" x2=\"45\" y2=\"15\" />\n",
       "  <line x1=\"0\" y1=\"30\" x2=\"45\" y2=\"30\" />\n",
       "  <line x1=\"0\" y1=\"45\" x2=\"45\" y2=\"45\" />\n",
       "  <line x1=\"0\" y1=\"60\" x2=\"45\" y2=\"60\" />\n",
       "  <line x1=\"0\" y1=\"75\" x2=\"45\" y2=\"75\" />\n",
       "  <line x1=\"0\" y1=\"90\" x2=\"45\" y2=\"90\" />\n",
       "  <line x1=\"0\" y1=\"105\" x2=\"45\" y2=\"105\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"45\" y1=\"0\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 45.0,0.0 45.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"22.500000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"65.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,65.000000,60.000000)\">8</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>efth</span></div><div class='xr-var-dims'>(source_terms, site, freq, dir)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1, 3, 35, 36), meta=np.ndarray&gt;</div><input id='attrs-7cb2b518-506f-4063-b4ff-c6fc1dd28d48' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7cb2b518-506f-4063-b4ff-c6fc1dd28d48' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-79b68ef4-dbba-428f-993d-1fef995afae5' class='xr-var-data-in' type='checkbox'><label for='data-79b68ef4-dbba-428f-993d-1fef995afae5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 118.12 kiB </td>\n",
       "                        <td> 14.77 kiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8, 3, 35, 36) </td>\n",
       "                        <td> (1, 3, 35, 36) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 8 chunks in 49 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"416\" height=\"188\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"42\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"30\" x2=\"42\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"5\" y1=\"0\" x2=\"5\" y2=\"30\" />\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"30\" />\n",
       "  <line x1=\"15\" y1=\"0\" x2=\"15\" y2=\"30\" />\n",
       "  <line x1=\"21\" y1=\"0\" x2=\"21\" y2=\"30\" />\n",
       "  <line x1=\"26\" y1=\"0\" x2=\"26\" y2=\"30\" />\n",
       "  <line x1=\"31\" y1=\"0\" x2=\"31\" y2=\"30\" />\n",
       "  <line x1=\"37\" y1=\"0\" x2=\"37\" y2=\"30\" />\n",
       "  <line x1=\"42\" y1=\"0\" x2=\"42\" y2=\"30\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 42.443115991541845,0.0 42.443115991541845,30.931822596185057 0.0,30.931822596185057\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"21.221558\" y=\"50.931823\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >8</text>\n",
       "  <text x=\"62.443116\" y=\"15.465911\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,62.443116,15.465911)\">1</text>\n",
       "\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"112\" y1=\"0\" x2=\"134\" y2=\"22\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"112\" y1=\"116\" x2=\"134\" y2=\"138\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"112\" y1=\"0\" x2=\"112\" y2=\"116\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"134\" y1=\"22\" x2=\"134\" y2=\"138\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"112.0,0.0 134.09622738579822,22.096227385798212 134.09622738579822,138.76289405246487 112.0,116.66666666666667\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"112\" y1=\"0\" x2=\"232\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"134\" y1=\"22\" x2=\"254\" y2=\"22\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"112\" y1=\"0\" x2=\"134\" y2=\"22\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"232\" y1=\"0\" x2=\"254\" y2=\"22\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"112.0,0.0 232.0,0.0 254.09622738579822,22.096227385798212 134.09622738579822,22.096227385798212\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"134\" y1=\"22\" x2=\"254\" y2=\"22\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"134\" y1=\"138\" x2=\"254\" y2=\"138\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"134\" y1=\"22\" x2=\"134\" y2=\"138\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"254\" y1=\"22\" x2=\"254\" y2=\"138\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"134.09622738579822,22.096227385798212 254.09622738579822,22.096227385798212 254.09622738579822,138.76289405246487 134.09622738579822,138.76289405246487\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"194.096227\" y=\"158.762894\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >36</text>\n",
       "  <text x=\"274.096227\" y=\"80.429561\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,274.096227,80.429561)\">35</text>\n",
       "  <text x=\"113.048114\" y=\"147.714780\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,113.048114,147.714780)\">3</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>dpt</span></div><div class='xr-var-dims'>(source_terms, site)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;</div><input id='attrs-ba1207ec-2b53-46bf-899d-f57d9dbda16b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ba1207ec-2b53-46bf-899d-f57d9dbda16b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-08ef76a7-adae-4859-8ceb-fa7f18cdbc69' class='xr-var-data-in' type='checkbox'><label for='data-08ef76a7-adae-4859-8ceb-fa7f18cdbc69' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 96 B </td>\n",
       "                        <td> 12 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8, 3) </td>\n",
       "                        <td> (1, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 8 chunks in 41 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"95\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"45\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"15\" x2=\"45\" y2=\"15\" />\n",
       "  <line x1=\"0\" y1=\"30\" x2=\"45\" y2=\"30\" />\n",
       "  <line x1=\"0\" y1=\"45\" x2=\"45\" y2=\"45\" />\n",
       "  <line x1=\"0\" y1=\"60\" x2=\"45\" y2=\"60\" />\n",
       "  <line x1=\"0\" y1=\"75\" x2=\"45\" y2=\"75\" />\n",
       "  <line x1=\"0\" y1=\"90\" x2=\"45\" y2=\"90\" />\n",
       "  <line x1=\"0\" y1=\"105\" x2=\"45\" y2=\"105\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"45\" y1=\"0\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 45.0,0.0 45.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"22.500000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"65.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,65.000000,60.000000)\">8</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>wspd</span></div><div class='xr-var-dims'>(source_terms, site)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;</div><input id='attrs-b7299ae8-7171-4957-8be2-e1f72c5a0b16' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b7299ae8-7171-4957-8be2-e1f72c5a0b16' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-feff97bd-d3ee-431a-9939-626cd6fbe727' class='xr-var-data-in' type='checkbox'><label for='data-feff97bd-d3ee-431a-9939-626cd6fbe727' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 96 B </td>\n",
       "                        <td> 12 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8, 3) </td>\n",
       "                        <td> (1, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 8 chunks in 89 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"95\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"45\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"15\" x2=\"45\" y2=\"15\" />\n",
       "  <line x1=\"0\" y1=\"30\" x2=\"45\" y2=\"30\" />\n",
       "  <line x1=\"0\" y1=\"45\" x2=\"45\" y2=\"45\" />\n",
       "  <line x1=\"0\" y1=\"60\" x2=\"45\" y2=\"60\" />\n",
       "  <line x1=\"0\" y1=\"75\" x2=\"45\" y2=\"75\" />\n",
       "  <line x1=\"0\" y1=\"90\" x2=\"45\" y2=\"90\" />\n",
       "  <line x1=\"0\" y1=\"105\" x2=\"45\" y2=\"105\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"45\" y1=\"0\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 45.0,0.0 45.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"22.500000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"65.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,65.000000,60.000000)\">8</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>wdir</span></div><div class='xr-var-dims'>(source_terms, site)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(1, 3), meta=np.ndarray&gt;</div><input id='attrs-949559d5-a797-4a9f-9c60-40c29427d740' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-949559d5-a797-4a9f-9c60-40c29427d740' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b058f254-ae1a-4aa7-91a0-1d9e1b53b8d9' class='xr-var-data-in' type='checkbox'><label for='data-b058f254-ae1a-4aa7-91a0-1d9e1b53b8d9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 96 B </td>\n",
       "                        <td> 12 B </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (8, 3) </td>\n",
       "                        <td> (1, 3) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 8 chunks in 89 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"95\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"45\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"15\" x2=\"45\" y2=\"15\" />\n",
       "  <line x1=\"0\" y1=\"30\" x2=\"45\" y2=\"30\" />\n",
       "  <line x1=\"0\" y1=\"45\" x2=\"45\" y2=\"45\" />\n",
       "  <line x1=\"0\" y1=\"60\" x2=\"45\" y2=\"60\" />\n",
       "  <line x1=\"0\" y1=\"75\" x2=\"45\" y2=\"75\" />\n",
       "  <line x1=\"0\" y1=\"90\" x2=\"45\" y2=\"90\" />\n",
       "  <line x1=\"0\" y1=\"105\" x2=\"45\" y2=\"105\" />\n",
       "  <line x1=\"0\" y1=\"120\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"45\" y1=\"0\" x2=\"45\" y2=\"120\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 45.0,0.0 45.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"22.500000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >3</text>\n",
       "  <text x=\"65.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,65.000000,60.000000)\">8</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></li></ul></div></li><li class='xr-section-item'><input id='section-e4942cd4-5880-4a18-8c26-1323b43cc1cb' class='xr-section-summary-in' type='checkbox'  ><label for='section-e4942cd4-5880-4a18-8c26-1323b43cc1cb' class='xr-section-summary' >Indexes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>freq</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-4da8f623-7cdd-48df-9a28-a0e046cf12d8' class='xr-index-data-in' type='checkbox'/><label for='index-4da8f623-7cdd-48df-9a28-a0e046cf12d8' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 0.03999999910593033,   0.0439719632267952,  0.04833833873271942,\n",
       "        0.05313829332590103, 0.058414872735738754,  0.06421541422605515,\n",
       "        0.07059194892644882,  0.07760166376829147,  0.08530744165182114,\n",
       "        0.09377838671207428,  0.10309050232172012,  0.11332729458808899,\n",
       "        0.12458059191703796,  0.13695132732391357,   0.1505504697561264,\n",
       "         0.1655000001192093,  0.18193399906158447,   0.1999998688697815,\n",
       "        0.21985965967178345,  0.24169152975082397,  0.26569128036499023,\n",
       "        0.29207417368888855,   0.3210768699645996,   0.3529595136642456,\n",
       "         0.3880080580711365,     0.42653688788414,  0.46889159083366394,\n",
       "         0.5154520869255066,   0.5666360259056091,   0.6229023933410645,\n",
       "         0.6847560405731201,   0.7527517080307007,    0.827499270439148,\n",
       "         0.9096691608428955,   0.9999985098838806],\n",
       "      dtype=&#x27;float32&#x27;, name=&#x27;freq&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>dir</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-a8ad0993-5744-470d-8d67-b0739afdf4a1' class='xr-index-data-in' type='checkbox'/><label for='index-a8ad0993-5744-470d-8d67-b0739afdf4a1' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([             261.0,              251.0,              241.0,\n",
       "                    231.0,              221.0,              211.0,\n",
       "                    201.0,              191.0,              181.0,\n",
       "                    171.0, 160.99998474121094,              151.0,\n",
       "                    141.0,              131.0, 120.99998474121094,\n",
       "       110.99998474121094, 100.99999237060547,  90.99999237060547,\n",
       "        80.99999237060547,  70.99998474121094,  60.99998474121094,\n",
       "        50.99998474121094,   40.9999885559082, 30.999988555908203,\n",
       "       20.999990463256836, 10.999992370605469, 0.9999943375587463,\n",
       "        350.9999694824219,  340.9999694824219,  330.9999694824219,\n",
       "        320.9999694824219,  310.9999694824219,  300.9999694824219,\n",
       "        290.9999694824219,              281.0,              271.0],\n",
       "      dtype=&#x27;float32&#x27;, name=&#x27;dir&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>site</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-28abe9b5-6ff4-4e54-8f7b-1aabf1ffec5b' class='xr-index-data-in' type='checkbox'/><label for='index-28abe9b5-6ff4-4e54-8f7b-1aabf1ffec5b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([1, 2, 3], dtype=&#x27;int64&#x27;, name=&#x27;site&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>source_terms</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-cca4812b-2651-4371-a4ea-d1be045a0e14' class='xr-index-data-in' type='checkbox'/><label for='index-cca4812b-2651-4371-a4ea-d1be045a0e14' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;komen&#x27;, &#x27;janssen&#x27;, &#x27;westhuysen&#x27;, &#x27;st6c1&#x27;, &#x27;st6c2&#x27;, &#x27;st6c3&#x27;, &#x27;st6c4&#x27;,\n",
       "       &#x27;st6c5&#x27;],\n",
       "      dtype=&#x27;object&#x27;, name=&#x27;source_terms&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-8cf75225-a77b-408e-a1ad-1d2b44abc941' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8cf75225-a77b-408e-a1ad-1d2b44abc941' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 122kB\n",
       "Dimensions:       (source_terms: 8, site: 3, freq: 35, dir: 36)\n",
       "Coordinates:\n",
       "  * freq          (freq) float32 140B 0.04 0.04397 0.04834 ... 0.8275 0.9097 1.0\n",
       "  * dir           (dir) float32 144B 261.0 251.0 241.0 ... 291.0 281.0 271.0\n",
       "  * site          (site) int64 24B 1 2 3\n",
       "  * source_terms  (source_terms) <U10 320B 'komen' 'janssen' ... 'st6c4' 'st6c5'\n",
       "Data variables:\n",
       "    lon           (source_terms, site) float32 96B dask.array<chunksize=(1, 3), meta=np.ndarray>\n",
       "    lat           (source_terms, site) float32 96B dask.array<chunksize=(1, 3), meta=np.ndarray>\n",
       "    efth          (source_terms, site, freq, dir) float32 121kB dask.array<chunksize=(1, 3, 35, 36), meta=np.ndarray>\n",
       "    dpt           (source_terms, site) float32 96B dask.array<chunksize=(1, 3), meta=np.ndarray>\n",
       "    wspd          (source_terms, site) float32 96B dask.array<chunksize=(1, 3), meta=np.ndarray>\n",
       "    wdir          (source_terms, site) float32 96B dask.array<chunksize=(1, 3), meta=np.ndarray>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Wave spectra\n",
    "\n",
    "dspec = xr.concat([read_spectra_output(run) for run in runs], dim=\"source_terms\")\n",
    "dspec[\"source_terms\"] = [run.run_id for run in runs]\n",
    "dspec"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Gridded parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1300x600 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "f = dsgrid.hs.plot(\n",
    "    x=\"longitude\",\n",
    "    y=\"latitude\",\n",
    "    col=\"source_terms\",\n",
    "    col_wrap=4,\n",
    "    vmin=0.5,\n",
    "    vmax=3.0,\n",
    "    cmap=\"turbo\",\n",
    "    subplot_kws=dict(projection=ccrs.PlateCarree()),\n",
    "    cbar_kwargs=dict(label=\"Hs (m)\"),\n",
    ")\n",
    "f.map(lambda: plt.gca().coastlines());"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Wave spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1300x600 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "p = dspec.isel(site=0).spec.plot(col=\"source_terms\", col_wrap=4, cbar_kwargs={\"label\": \"Ed (m2/Hz/deg)\"})"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "rompy",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
